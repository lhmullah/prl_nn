@using PayrollWeb.ViewModels
@model PayrollWeb.ViewModels.DeductionUploadView

@{
    ViewBag.Title = "IndividualDeductionEntry";
    Layout = "~/Views/Shared/_LayoutDetailsPage.cshtml";
}

@section PageBanner
{
Individual Allowance Entry
}

@{
    if (TempData.ContainsKey("msg"))
    {
        var res = (OperationResult)TempData["msg"];
        if (res.IsSuccessful)
        {
    <div id="notifyUser" class="alert alert-success">
        <button data-dismiss="alert" class="close" type="button">×</button>
        <div>@res.Message </div>
    </div>    
        }
        else
        {
    <div id="notifyUser" class="alert alert-error">
        <button data-dismiss="alert" class="close" type="button">×</button>
        <div>@res.Message </div>
    </div> 
        }
    }
}
@section PageSpecificJsHeader
{
    <link rel="stylesheet" type="text/css" href="~/Content/bootstrap3-editable/css/bootstrap-editable.css" />
}


@using (Html.BeginForm("IndividualDeductionEntry", "Deduction", FormMethod.Post, new { id = "searchForm", @class = "form-inline" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <form>
        <div class="row-fluid" style="margin: 12px;">
            <div class="span2">
                @Html.LabelFor(model => model.Year)
            </div>
            <div class="span8" style="float: left;">
                @Html.DropDownListFor(model => model.Year, new SelectList(@ViewBag.Years), "---Select Year---") @Html.ValidationMessageFor(model => model.Year)
                <br />
            </div>
        </div>

        <div class="row-fluid" style="margin: 12px;">
            <div class="span2">
                @Html.LabelFor(model => model.Month)
            </div>
            <div class="span8" style="float: left;">
                @Html.DropDownListFor(model => model.Month, new SelectList(@ViewBag.Months, "Value", "Key"), "---Select Month---") @Html.ValidationMessageFor(model => model.Month)<br />
            </div>
        </div>

        <div class="row-fluid" style="margin: 12px;">
            <div class="span2">
                @Html.LabelFor(model => model.DeductionName)
            </div>
            <div class="span8" style="float: left;">
                @Html.DropDownListFor(model => model.DeductionName, new SelectList(@Model.DeductionNames, "id", "deduction_name"), "Select Deduction Name")
                @Html.ValidationMessageFor(model => model.DeductionName)
                <br />
            </div>
        </div>

        <div class="row-fluid" style="margin: 12px;">
            <div class="span2">
                @Html.Label("Search employee")
            </div>
            <div class="span8" style="float: left;">
                <input type="text" autocomplete="off" data-provide="typeahead" placeholder="Write Employee ID or Name and then Select" style="width: 290px;" id="aa" />
            </div>
        </div>
        <div class="row-fluid" style="margin: 12px;">
            <div class="span2" style="float: left">
                @Html.Label("Amount")
            </div>
            <div class="span8" style="float: left">
                @Html.TextBoxFor(model => model.amount)
                @Html.ValidationMessageFor(model => model.amount)
                <br />
                <span style="color: red; font-size: x-small">Put No of days only for Unpaid Leave (LWP)</span>
            </div>
        </div>
        <div class="row-fluid" style="margin: 12px;">
            <div class="span2" style="float: left">
                @Html.Label("Remarks")
            </div>
            <div class="span8" style="float: left">
                @Html.TextBoxFor(model => model.remarks, new { placeholder = "Not mandatory field" })
            </div>
        </div>
        <div class="row-fluid" style="margin: 12px;">
            <div class="span2">
            </div>
            <div class="span8" style="float: left;">
                <input class="btn btn-success" id="btnSave" type="submit" value="Save" />
                <input type="hidden" name="empid" id="empid" />
                <br />
            </div>
        </div>

    </form>

}

<div id="detailsGrid">
</div>


@section PageSpecificJs
{
    <script type="text/javascript" src="~/Scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/Content/bootstrap3-editable/js/bootstrap-editable.js"></script>
    <link href="~/Content/examples.css" rel="stylesheet" />
    <script type="text/javascript" src="~/Scripts/typeahead.js"></script>
    <script type="text/javascript" src="~/Scripts/hogan-2.0.0.min.js"></script>
    <script type="text/javascript">

@*        $(function() {
            defaultLoad();
        });

        function defaultLoad() {
            $.get('@Url.Action("GetIndividualDeductionEntry", "Deduction")', function(rdata) {
                $("#dynCont1").html(rdata);
                prepareForm('#dynCont1');
            });
        }*@

        var q = '@Url.Action("GetEmployeeSearch", "Deduction")';
        q = q + '?query=%QUERY';
        $("#aa").typeahead({
            name: 'SearchEmployeeData',
            limit: 10,
            valueKey: 'name',
            engine: Hogan,
            remote: { url: q }
        }).on("typeahead:selected", function ($e, datum) {
            var id = 0;
            id = datum['id'];
            $('#empid').val(id);
        });

        //save click
        $('#btnsave').click(function (e) {
            e.preventDefault();
            uploadDeductionSearch();
        });


        //save click
        //$('#btnsave').click(function (e) {
        //    e.preventdefault();

        //    var data = json.stringify({ deduction_name_id: $('#deductionname').val(), empid: $('#empid').val(), year: $('#year').val(), month: $('#month').val(), amount: $('#amount').val() });

        //    console.log(data);
        //    postreqwithtoken("application/json", 'json', 'post', '/deduction/individualdeductionentry', data);
        //});

        // Parameterized Ajax POST Request
        // All the Parameters are required
        //function postReqWithToken(contentType, dataType, type, url, data) {
        //    return $.ajax({
        //        contentType: contentType,
        //        dataType: dataType,
        //        type: type,
        //        url: url,
        //        data: data,
        //        success: function (result) {
        //            console.log(result);
        //            //alert(result);
        //            //Upload Deduction
        //            //uploadDeductionSearch();
        //        },
        //        error: function (err) {
        //            console.log(err);
        //        }
        //    })
        //}


        function uploadDeductionSearch() {
            if ($('#searchForm').find('form').valid()) {
                $.post('@Url.Action("GgetDeductionDataSelection", "Deduction")', $('#searchForm').find('form').serialize(), function (rdata) {
                $("#detailsGrid").html(rdata);
                prepareForm("#detailsGrid");
                $('a[id^=DeductionUploadData]').editable({
                    success: function (response, newValue) {
                        if (response.status == 'error')
                            return response.msg;
                    }
                });

                $("#Paging ul a").click(function (e) {
                    e.preventDefault();
                    pageLoadData(this);
                    return false;
                });
            });
        }
    }

    function pageLoadData(el) {
        var atr = $(el).attr('href');
        if (atr != null && atr != 'undefined')
            $.get(atr, function (rdata) {
                $("#detailsGrid").html(rdata);
                prepareForm("#detailsGrid");

                $('a[id^=DeductionUploadData]').editable({
                    success: function (response, newValue) {
                        if (response.status == 'error')
                            return response.msg;
                    }
                });

                $("#Paging ul a").click(function (e) {
                    e.preventDefault();
                    pageLoadData(this);
                    return false;
                });
            });
    }

    function prepareForm(nam) {
        var $frm = $(nam).find('form');
        if ($frm != null && $frm != "undefined") {
            $frm.unbind();
            $frm.data('validator', null);
            $.validator.unobtrusive.parse(document);
        }
    }
    </script>
}
